Program     ::= Block
Block       ::= (Stmt ';')+
Stmt        ::= 'let' Id (',' Id)* '=' Exp
             |  Id (',' Id)* '=' Exp (',' Exp)*
             |  Exp (',' Exp)*
             |  'while(' Exp ')' Block 'end'
             |  'for(' (('let')? Id '=' Exp ';')? Exp ';' Stmt ')' Block 'end'
             |  'if(' Exp ')' Block ('maybe(' Exp ')' Block)* ('otherwise' Block)? 'end'
Exp         ::= Exp1 ('or' Exp1)*
Exp1        ::=  Exp2 ('and' Exp2)*
Exp2        ::=  Exp3 (('<' | '<=' | '==' | '!=' | '>=' | '>') Exp3)?
Exp3        ::=  Exp4 ([+-] Exp4)*
Exp4        ::=  Exp5 ([*/] Exp5)*
Exp5        ::=  ('not' | '-')? Exp6
Exp6        ::=  'true' | 'false' | Intlit | '(' Exp ')' | Func | Array | Object | Call | Ref
Func        ::=  'func(' (Id (',' Id)*)? ')' Block 'end'
Array       ::=  '[' (Exp (',' Exp)?)* ']'
Object      ::= '<<' (Prop (',' Prop)* )? '>>'
ValRef      ::= 'true' | 'false' | Id
Prop        ::= (ValRef | StringLit | IntLit) ':' Exp
Call        ::= Id '(' (Exp (',' Exp)?)* ')'
Ref         ::= Id (('.' ValRef) | ('[' (ValRef | StringLit | IntLit) ']'))