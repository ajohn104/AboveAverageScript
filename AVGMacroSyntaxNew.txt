Program     ::= Block
Block       ::= (Stmt ';')+
Stmt        ::= Exp (',' Exp)*
             |  'while(' Exp ')' Block 'end'
             |  'for(' (('let')? Id '=' Exp ';')? Exp ';' Exp ')' Block 'end'
             |  'if(' Exp ')' Block ('maybe(' Exp ')' Block)* ('otherwise' Block)? 'end'



IntLit  ::= '-'? [0-9]+ ('.' [0-9]+ )* ('E' '-'? [0-9]+ )*
StringLit   ::= "\"" ( [a-zA-Z] | '\\' ( [\'\"rn\\u] | [0-9A-F]{4} ) )* "\""
Reserved    ::= 'if' | 'else' | 'fun'
Id      ::= ((?!Reserved\b).)* [a-zA-Z$] [a-zA-Z0-9_@$]*
Call    ::= Id '(' ( Exp (',' Exp)* )? ')'
AddOp   ::= '+' | '-'
MulOp   ::= '*' | '\\'






Prgm    ::= Func+ Exp
Func    ::= 'fun' Id '(' ( Id (',' Id )* )? ')' Body
Body    ::= '{' (Exp ';')+ '}'
Exp     ::= Exp1 ('if' Exp1 'else' Exp1)
Exp1    ::= Exp2 (AddOp Exp2)*
Exp2    ::= Exp3 (MulOp Exp3)*
Exp3    ::= '-'? Exp4
Exp4    ::= Exp5 '!'?
Exp5    ::= IntLit | StringLit | Id | Call | '(' Exp ')'
IntLit  ::= '-'? [0-9]+ ('.' [0-9]+ )* ('E' '-'? [0-9]+ )*
StringLit   ::= "\"" ( [a-zA-Z] | '\\' ( [\'\"rn\\u] | [0-9A-F]{4} ) )* "\""
Reserved    ::= 'if' | 'else' | 'fun'
Id      ::= ((?!Reserved\b).)* [a-zA-Z$] [a-zA-Z0-9_@$]*
Call    ::= Id '(' ( Exp (',' Exp)* )? ')'
AddOp   ::= '+' | '-'
MulOp   ::= '*' | '\\'